{"version":3,"sources":["utils/render_binvox.js","App.js","serviceWorker.js","index.js"],"names":["renderer","scene","camera","grid","voxel_mesh","voxel_geo","voxel_mat","THREE","require","OrbitControls","$","voxel","grid_size","reader","FileReader","fileLoad","array_buffer","console","log","buf","Buffer","from","lines","line","c","pos","indexOf","Promise","reject","toString","push","slice","depth","height","width","version","parseInt","i","length","append","idx","j","k","gs","byteLength","value","readUInt8","count","_","Math","floor","resolve","read_binvox","result","then","centering","remove","GridHelper","position","set","material","color","Color","opacity","add","dispose","Geometry","mesh_item","Mesh","BoxGeometry","time","origin","x","y","z","offset_x","offset_y","offset_z","argmax","argmin","norm_x","norm_y","norm_z","mergeMesh","MeshPhongMaterial","timeEnd","plot_voxel","catch","err","v","axis","max","min","animate","requestAnimationFrame","render","init_vox","inp_file","readAsArrayBuffer","WebGLRenderer","alpha","antialias","setSize","setClearColor","domElement","Scene","PerspectiveCamera","ambientLight","AmbientLight","directionalLight","DirectionalLight","normalize","addEventListener","muiTheme","createMuiTheme","typography","fontFamily","App","handleUploadClick","event","target","files","setState","selectedFile","imageUploaded","form","FormData","forEach","file","index","arr","loading","axios","post","headers","_boundary","response_","get","responseType","response","data","blob","Blob","type","error","this","ThemeProvider","theme","className","Grid","container","item","md","accept","id","multiple","hidden","onChange","htmlFor","Fab","component","state","Typography","style","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.59903e9c.chunk.js","sourcesContent":["// Taken from https://github.com/raahii/simple_voxel_viewer/\n\nvar THREE = require('three');\n// var fs = window.require('fs');\nvar fs = require('browserify-fs');\nvar OrbitControls = require('three-orbit-controls')(THREE);\nvar $ = require(\"jquery\");\n\nvar renderer, scene, camera, grid, voxel=[];\nvar voxel_mesh, voxel_geo, voxel_mat;\nvar grid_size = 32; var cube_size = 10;\nvar reader = new FileReader();\n\n//\n// read voxel data\n//\nfunction read_binvox(array_buffer) {\n    console.log(array_buffer)\n  var buf = Buffer.from(array_buffer, 'hex')\n  console.log(buf)\n  \n  // read header\n  var lines = [], line='', c=0;\n  while (line != 'data') {\n    var pos = buf.indexOf('\\n');\n    if (c++ > 1000 || pos === -1) return Promise.reject(\"error reading header\");\n    line = buf.toString('utf-8', 0, pos);\n    lines.push(line);\n    buf = buf.slice(pos+1);\n  }\n\n  var line = lines[0].slice(0, 7);\n  if (line != '#binvox') {\n    return Promise.reject(`first line reads ${line} instead of #binvox`)\n  }\n  var version = parseInt(lines[0].slice(8), 10);\n  console.log(\"binvox version: \" + version);\n  \n  var depth, height, width;\n  for(var i=1; i<lines.length-1; i++) {\n    line = lines[i];\n    if (line.slice(0, line.indexOf(' ')) == 'dim') {\n      line = line.slice(line.indexOf(' ')+1);\n      var pos = line.indexOf(' ');\n      depth = parseInt(line.slice(0, pos), 10);\n\n      line = line.slice(pos+1);\n      pos = line.indexOf(' ');\n      height = parseInt(line.slice(0, pos), 10);\n\n      line = line.slice(pos+1);\n      width = parseInt(line, 10);\n      break;\n\n    } else {\n      return Promise.reject(`unrecognized keyword ${line}, skipping`)\n    }\n  }\n  if (depth === void 0) {\n    if (height === void 0 || width === void 0) {\n      return Promise.reject(\"error reading header\");\n    } else {\n      return Promise.reject(\"missing dimensions in header\");\n    }\n    return -1;\n  }\n  \n  // should be depth === width === height\n  grid_size = depth\n  console.log('size: '+`(${depth}, ${width}, ${height})`);\n  $('#size').append(`(${depth}, ${width}, ${height})`);\n\n  // read voxel data\n  voxel = [];\n  var idx = 0;\n  var i=0, j=0, k=0;\n  var gs = grid_size;\n  for ( var c=0; c<buf.byteLength/2; c++) {\n    var value = buf.readUInt8(2*c);\n    var count = buf.readUInt8(2*c+1);\n    if (value == 1) {\n      for ( var _=0; _<count; _++) {\n        i = Math.floor(idx/(gs*gs))\n        j = Math.floor((idx - i*gs*gs)/gs)\n        k = idx - i*gs*gs - j*gs\n        voxel.push([i, k, j]);\n        idx++;\n      }\n    } else {\n      idx += count;\n    }\n  }\n  buf = null;\n\n  return Promise.resolve();\n}\n\nfunction fileLoad() { \n  read_binvox(reader.result).then(() => {\n    plot_voxel(false);\n  }).catch((err) => {\n    $('#size').remove();\n    $('#error').append(\n      `<div class=\"alert alert-danger\" role=\"alert\"> <strong>Error</strong>: ${err}</div>`\n    )\n  });\n}\n\nfunction argmax(v, axis) {\n  var idx = {\n    'x': 0,\n    'y': 1,\n    'z': 2,\n  }\n  var max = v[0][idx[axis]];\n  for(var i=1; i<v.length; i++) {\n    if (v[i][idx[axis]] > max) {\n      max = v[i][idx[axis]]\n    }\n  }\n  return max;\n}\n\nfunction argmin(v, axis) {\n  var idx = {\n    'x': 0,\n    'y': 1,\n    'z': 2,\n  }\n  var min = v[0][idx[axis]];\n  for(var i=1; i<v.length; i++) {\n    if (v[i][idx[axis]] < min) {\n      min = v[i][idx[axis]]\n    }\n  }\n  return min;\n}\n\n//\n// plotting functions\n//\nfunction plot_voxel(centering = true) {\n  console.log(\"plotting!\");\n\n  // 既存のvoxelメッシュの削除\n  if ( grid ) {\n    scene.remove( grid );\n  }\n\n  // グリッドを描画\n  grid = new THREE.GridHelper(grid_size*cube_size, grid_size);\n  grid.position.set( 0, -cube_size/2, 0 );\n  grid.material.color = new THREE.Color(0x000000);\n  grid.material.opacity= 0.2;\n  scene.add(grid);\n  camera.position.set(-20*grid_size, 7*grid_size, 20*grid_size);\n\n  // 既存のvoxelメッシュの削除\n  if ( voxel_mesh ) {\n    scene.remove( voxel_mesh );\n    voxel_geo.dispose();\n    voxel_mat.dispose();\n  }\n  \n  // voxelを描画\n  voxel_geo = new THREE.Geometry;\n  var mesh_item = new THREE.Mesh(new THREE.BoxGeometry(cube_size, cube_size, cube_size));\n\n  console.time('loading time');\n\n  var origin = {\n    x: -0.5*cube_size*(grid_size-1),\n    y: -cube_size / 2,\n    z: -0.5*cube_size*(grid_size-1),\n  };\n\n  var offset_x=0, offset_y=0, offset_z=0;\n  if (centering) {\n     offset_x = ((argmax(voxel, 'x') - argmin(voxel, 'x')) / 2 - grid_size / 2) * cube_size;\n     offset_z = ((argmax(voxel, 'z') - argmin(voxel, 'z')) / 2 - grid_size / 2) * cube_size;\n  }\n\n  for (var i=0; i<voxel.length; i++) {\n    var norm_x = origin.x - offset_x + cube_size * voxel[i][0];\n    var norm_y = origin.y - offset_y + cube_size * voxel[i][1];\n    var norm_z = origin.z - offset_z + cube_size * voxel[i][2];\n    mesh_item.position.set(norm_x, norm_y, norm_z);\n    voxel_geo.mergeMesh(mesh_item);\n  }\n\n  voxel_mat = new THREE.MeshPhongMaterial({color: 0x65C87A});\n  voxel_mesh = new THREE.Mesh(voxel_geo, voxel_mat);\n  scene.add(voxel_mesh)\n  console.timeEnd('loading time');\n\n  mesh_item = null;\n}\n\n//\n// Init function\n//\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\n\nfunction init_vox(inp_file) {\n  // レンダラー\n    //document.body.removeChild(link);\n    // var inp_file = new File(inp_file_name)\n    // console.log(inp_file)\n  reader.readAsArrayBuffer(inp_file);\n  renderer = new THREE.WebGLRenderer({ alpha: true, antialias:true});\n  var width  = $('#3d-container').width();\n  var height = $('#3d-container').height();\n  renderer.setSize(width, height);\n  renderer.setClearColor( new THREE.Color(0xffffff),0.0);\n  $('#3d-container').append(renderer.domElement);\n\n  // シーン\n  scene = new THREE.Scene();\n\n  // カメラ\n  camera = new THREE.PerspectiveCamera( 40, width / height, 1, 10000 );\n  camera.position.set(-20*grid_size, 7*grid_size, 20*grid_size);\n  \n  var controls = new OrbitControls(camera);\n  // 光源\n  var ambientLight = new THREE.AmbientLight( 0x606060 );\n  scene.add( ambientLight );\n  var directionalLight = new THREE.DirectionalLight( 0xffffff );\n  directionalLight.position.set( 1, 0.75, 0.5 ).normalize();\n  scene.add( directionalLight );\n\n  // グリッド\n  grid = new THREE.GridHelper(grid_size*cube_size, grid_size);\n  grid.position.set( 0, -cube_size/2, 0 );\n  grid.material.color = new THREE.Color(0x000000);\n  grid.material.opacity= 0.2;\n  scene.add(grid);\n\n  // ファイルのドラッグ＆ドロップ\n  reader.addEventListener('load', fileLoad, false);\n    // read_binvox(reader.result).then(() => {\n    //     plot_voxel(false);\n    // }).catch((err) => {\n    //     $('#size').remove();\n    //     $('#error').append(\n    //     `<div class=\"alert alert-danger\" role=\"alert\"> <strong>Error</strong>: ${err}</div>`\n    //     )\n    // });\n  \n  // 初回実行\n  animate();\n}\n\nexport default init_vox;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Grid, Fab, Slide, Typography } from '@material-ui/core';\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport axios from 'axios';\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport init_vox from './utils/render_binvox'\n\nconst font = \"'Montserrat', sans-serif\";\n\nconst muiTheme = createMuiTheme({\n    typography : {\n        fontFamily: font\n    }\n})\n\nclass App extends Component {\n\n    componentWillMount() {\n        this.setState({\n            imageUploaded: 0,\n            loading: false\n        })\n    };\n\n    handleUploadClick = event => {\n        if (event.target.files.length < 4) {\n            return 0\n        }\n\n        var files = [event.target.files[0], event.target.files[1], event.target.files[2], event.target.files[3]];\n\n        console.log(files)\n        this.setState({\n          selectedFile: files,\n          imageUploaded: 1\n        });\n\n        var form = new FormData();\n        files.forEach((file, index, arr)=> {\n            form.append(index, file);\n        });\n\n        this.setState({\n            loading: true\n        })\n\n        axios.post('/generateBinvox', form, {\n            headers: {\n              'accept': 'application/json',\n              'Accept-Language': 'en-US,en;q=0.8',\n              'Content-Type': `multipart/form-data; boundary=${form._boundary}`,\n            }\n        }).then((response_) => {\n            axios.get('/generateBinvox', {responseType: 'blob'}).then((response) => {\n                // const link = document.createElement('a');\n                var binaryData = [];\n                binaryData.push(response.data);\n            var blob = new Blob([response.data], {type: 'application/octet-stream'});\n            \n            init_vox(blob);\n            this.setState({\n                loading: false\n            })\n        });\n          })\n          .catch((error) => {\n            //handle error\n          });\n    };\n\n    render() {\n        return (\n            <ThemeProvider theme={muiTheme}>\n            <div className=\"App\">\n                <Grid className=\"App-header\" container>\n                    <Grid item md={12}>\n                        <input\n                            accept=\"image/*\"\n                            // className={classes.input}\n                            id=\"contained-button-file\"\n                            multiple\n                            hidden\n                            type=\"file\"\n                            onChange={this.handleUploadClick}\n                        />\n                        <label htmlFor=\"contained-button-file\">\n                            <Fab component=\"span\">\n                                <AddPhotoAlternateIcon />\n                            </Fab>\n                        </label>\n                    </Grid>\n                    <Grid item md={12}>\n                        {this.state.loading && <Typography>Generating model...will take a while!!!! :)</Typography>}\n                    </Grid>\n                    <Grid item md={8}>\n                        <div id=\"3d-container\" style={{\"height\": 500, \"width\": 500}}>\n                        </div>\n                        <div id=\"size\">\n                        </div>\n                        <div id=\"error\">\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        </ThemeProvider>\n        );\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}